INCLUDE Irvine32.inc

COMMENT @
	Write a procedure named stringTrim which takes the offsets of two strings and an integer in a stack frame. The integer
	represents the number of characters to copy from the first string to the second string. You may assume the second string has at least
	as many indexes as the integer passed and the first string has more indexes than the integer passed. Your procedure should use one
	of the string primitive operations to accomplish this.
@

.data
	destinationString BYTE 30 DUP(?)
	stringOne BYTE "Benjamin", 0

.code
main PROC

	push OFFSET destinationString
	push OFFSET stringOne
	push 5
	Call stringTrim

exit
main ENDP

stringTrim PROC
	push ebp
	mov ebp, esp

	mov ecx, [ebp + 8]
	mov esi, [ebp + 12] 
	mov edi, [ebp + 16]
	rep movsb

	mov BYTE PTR [edi], 0 ; null termination

	mov edx, [ebp + 16]
	call crlf
	call WriteString
	call WaitMsg

	pop ebp
	ret 12

stringTrim ENDP

END main

; its important to note that mov edx, edi does not work while mov edx, [ebp+16] does because edi constantly changes to reflect the next insertion of characters. while the pointer doesnt.
